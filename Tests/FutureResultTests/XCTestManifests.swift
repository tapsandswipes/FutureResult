#if !canImport(ObjectiveC)
import XCTest

extension FunctionCompositionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FunctionCompositionTests = [
        ("testCastKO", testCastKO),
        ("testCastOK", testCastOK),
        ("testCompose", testCompose),
        ("testComposeOperator", testComposeOperator),
        ("testFunctionApplicationXF", testFunctionApplicationXF),
        ("testFunctionApplicationXFOptional", testFunctionApplicationXFOptional),
        ("testFunctionApplicationXFOptionalrOptional", testFunctionApplicationXFOptionalrOptional),
        ("testFunctionApplicationXFrOptional", testFunctionApplicationXFrOptional),
        ("testFunctionApplicationXOptionalF", testFunctionApplicationXOptionalF),
        ("testFunctionApplicationXOptionalFOptional", testFunctionApplicationXOptionalFOptional),
        ("testFunctionApplicationXOptionalFOptionalrOptional", testFunctionApplicationXOptionalFOptionalrOptional),
        ("testID", testID),
    ]
}

extension FutureResultChainableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FutureResultChainableTests = [
        ("testModify", testModify),
    ]
}

extension FutureResultTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FutureResultTests = [
        ("testFutureRunKO", testFutureRunKO),
        ("testFutureRunOK", testFutureRunOK),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(FunctionCompositionTests.__allTests__FunctionCompositionTests),
        testCase(FutureResultChainableTests.__allTests__FutureResultChainableTests),
        testCase(FutureResultTests.__allTests__FutureResultTests),
    ]
}
#endif
